######################################################################################################
# 1. count number
######################################################################################################
def sumRange(a: int, b: int) -> int:
    if a > b:
        a, b = b, a  # Ensure a is less than or equal to b
    total = 0
    i = a
    while i <= b:
        total += i
        i += 1
    return total


print(sumRange(1, 10))


######################################################################################################
# 2. count the number divisible by 3 and 5
######################################################################################################
def countdiv3and5(a: int, b: int):
    if a > b:
        a, b = b, a
    count = 0
    current = a
    while current <= b:
        if current % 3 == 0 and current % 5 == 0:
            count += 1
        current += 1
    return count


print(countdiv3and5(100, -100))


######################################################################################################
# 3. sum of div by 3 and 6
######################################################################################################
def sumDivisibleBy3And6(a: int, b: int) -> int:
    if a > b:
        a, b = b, a  # Ensure a is less than or equal to b
    total_sum = 0
    current = a
    while current <= b:
        if current % 3 == 0 and current % 6 == 0:
            total_sum += current
        current += 1
    return total_sum


######################################################################################################
# 4. multiplication table
######################################################################################################
def printTable(num: int) -> None:
    i = 1
    while i <= 10:
        print(num * i)
        i += 1


printTable(0)
print(sumDivisibleBy3And6(0, 0))


######################################################################################################
# 5. square the sum
######################################################################################################
def squares_sum(n):
    i = 1
    sum = 0
    while n >= i:
        x = i**2
        sum += x
        i = i + 1
    return sum


print(squares_sum(23))


######################################################################################################
# 6. Factorial
######################################################################################################
def fact(n: int):
    result = 1
    i = 1
    while i <= n:
        result *= i
        i += 1
    return result


print(fact(5))


######################################################################################################
# 7. pattern from 10
######################################################################################################
def pattern(n: int) -> None:
    i = 1
    while i <= n:
        print(i * 10)
        i += 1


pattern(7)


######################################################################################################
# 8. 2 increase
######################################################################################################
def pattern(n: int) -> None:
    i = 0
    while i < n:
        print(2**i)
        i += 1


pattern(12)


######################################################################################################
# 9. 11 pattern
######################################################################################################
def pattern(n: int) -> None:
    num = 1
    i = 1
    while i <= n:
        print(num)
        num = (num * 10) + 1
        i += 1


pattern(5)


######################################################################################################
# 9. pattern
# 1
# 4
# 16
# 25
######################################################################################################
def pattern(n: int):
    i = 1
    while i < n:
        print(i * i)
        i += i


pattern(5)


######################################################################################################
# 10. 2, 22, 222
######################################################################################################
def pattern(n: int):
    num = 2
    i = 1
    while i <= n:
        print(num)
        num = (num * 10) + 2
        i += 1


pattern(5)
